{"version":3,"sources":["screens/test/home.js","screens/test/list.js","screens/test/testing.js","screens/main/header.js","screens/main/loading.js","screens/main/formStater.js","screens/main/home.js","App.js","web-build/register-service-worker.js"],"names":["StyleSheet","create","container","flex","backgroundColor","alignContent","button","color","margin","alignItems","justifyContent","width","Header","View","style","styles","header","Text","title","padding","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","fontSize","fontWeight","textAlign","textShadowColor","textShadowRadius","textShadowOffset","loading","alignSelf","marginBottom","loadingText","FormStater","props","useState","id","description","formDetails","setFormDetails","setTitle","setDescription","start","result","uuid","v4","console","log","func","alert","sendData","ScrollView","area","heading","line","subArea","text","input","autoCapitalize","placeholder","value","onChangeText","t","titleHandle","descHandle","TouchableOpacity","btn","onPress","btnText","name","size","borderRadius","marginVertical","marginTop","marginHorizontal","paddingHorizontal","top","Home","data","bind","this","marginLeft","Platform","OS","marginRight","main","App","paddingTop","StatusBar","currentHeight","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error"],"mappings":"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","file":"static/js/app.5e024ca4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  ScrollView,\n  Button,\n  TextInput,\n  ImagePropTypes,\n  TouchableOpacity,\n} from \"react-native\";\n\nexport default function Home(props) {\n  // all states--\n  const [fildCount, setFildCount] = useState({ count: 0 });\n  const [txt, setTxt] = useState({ textArray: [] });\n  const [listInput, setListInput] = useState({ inputList: [] });\n  // const [textData, setTextData] = useState({ data: \"\" });\n  const [t, setT] = useState({ option: \"\" });\n\n  // console.log(\"line 1 : \" + t.option);\n\n  const input = (index) => {\n    return (\n      <TouchableOpacity key={index}>\n        {/* {console.log(txt.textArray[index])} */}\n        <TextInput\n          placeholder=\"Enter text here...\"\n          // value={listInput.inputList[index].text}\n          autoFocus={true}\n          onChangeText={(t) => {\n            setValue(t, index);\n          }}\n        />\n      </TouchableOpacity>\n    );\n  };\n\n  // console.log(listInput);\n\n  const addFild = () => {\n    // setFildCount({ count: ++fildCount.count });\n    const td = {\n      id: fildCount.count,\n      text: \"\",\n    };\n    setFildCount({ count: fildCount.count + 1 });\n    setListInput({ inputList: [...listInput.inputList, td] });\n  };\n\n  // setup all valu\n  const setall = (i) => {\n    setListInput({ inputList: listInput.inputList });\n    console.log(\"inputList: \", listInput.inputList);\n  };\n\n  const setValue = (e, i) => {\n    setT({ option: e });\n    listInput.inputList[i].text = e;\n    setall(i);\n  };\n\n  const saveIt = () => {\n    // console.log(listInput.inputList);\n    props.func(listInput);\n  };\n\n  return (\n    <ScrollView style={styles.container}>\n      <Text>Home</Text>\n      {listInput.inputList.map((item, index) => {\n        // console.log(item);\n        // console.log(\" index: \" + index);\n        return input(index);\n      })}\n      <Button\n        title=\"add\"\n        onPress={() => {\n          addFild();\n        }}\n        style={styles.button}\n      />\n      <Button\n        title=\"save\"\n        onPress={() => {\n          saveIt();\n        }}\n        style={styles.button}\n      />\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    // alignItems: \"baseline\",\n    // justifyContent: \"flex-start\",\n    alignContent: \"center\",\n  },\n  button: {\n    color: \"green\",\n  },\n});\n","import React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  ScrollView,\n  Button,\n  TextInput,\n  ImagePropTypes,\n} from \"react-native\";\n\nexport default function List(props) {\n  console.log(props);\n\n  // const [txt, setTxt] = useState(\"\");\n  const question = (list) => {\n    return (\n      <View\n        style={{\n          backgroundColor: \"#aff\",\n          // width: \"90%\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          padding: 10,\n        }}\n      >\n        <Text\n          style={{\n            marginBottom: 10,\n            borderBottomColor: \"#aaa\",\n            borderBottomWidth: 2,\n          }}\n        >\n          Title\n        </Text>\n        {list.map((txt, index) => {\n          console.log(txt);\n\n          return (\n            <Text\n              key={index}\n              style={{\n                margin: 10,\n              }}\n            >\n              {txt.text}\n            </Text>\n          );\n        })}\n      </View>\n    );\n  };\n\n  return (\n    <ScrollView style={styles.container}>\n      {props.data.map((item, index) => {\n        console.log(item.inputList);\n        return (\n          // <Text key={index}>\n          //   {/* {index + 1}\n          //   {item} */}\n          //   test\n          // </Text>\n          <View style={{ margin: 20 }}>{question(item.inputList)}</View>\n        );\n      })}\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    margin: 20,\n    // alignItems: \"baseline\",\n    // justifyContent: \"flex-start\",\n    alignContent: \"center\",\n  },\n});\n","import React, { useState } from \"react\";\nimport { StyleSheet, Text, View, Button } from \"react-native\";\n\nimport Home from \"./home\";\nimport List from \"./list\";\n\nexport default function Test() {\n  const [state, setState] = useState({ show: false });\n  const [listData, setListData] = useState({ list: [] });\n\n  console.log(\"all list:  \", listData);\n\n  const fun = () => {\n    setState({ show: !state.show });\n  };\n\n  const getData = (i) => {\n    // alert(\"Child Data found : \" + i);\n\n    // console.log(\"data received:  \", i);\n    setListData({ list: [...listData.list, i] });\n    // console.log(\"all list:  \", listData.lst);\n  };\n\n  //render to another screen\n  const calHome = () => {\n    return <Home func={getData.bind(this)} />;\n  };\n\n  const showList = (data) => {\n    return <List data={data} />;\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text>App</Text>\n      <Button\n        title=\"Click me\"\n        onPress={() => {\n          fun();\n        }}\n        style={styles.button}\n      />\n      <View style={{ width: \"80%\" }}>\n        {state.show ? calHome() : null}\n        {listData.list.length > 0 ? (\n          showList(listData.list)\n        ) : (\n          <Text>No data found</Text>\n        )}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"80%\",\n  },\n  button: {},\n});\n","import React from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TouchableNativeFeedback,\n  Alert,\n} from \"react-native\";\n\nexport default function Header() {\n  // console.log(landscape);\n\n  return (\n    <View style={styles.header}>\n      <Text style={styles.title}>Forms</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  header: {\n    backgroundColor: \"darkslateblue\",\n    alignContent: \"center\",\n    padding: 10,\n    // elevation: 10,\n    width: \"100%\",\n\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 5,\n      height: 5,\n    },\n\n    shadowOpacity: 0.5,\n    shadowRadius: 7.49,\n\n    elevation: 12,\n  },\n  title: {\n    fontSize: 25,\n    fontWeight: \"bold\",\n    color: \"#fafafa\",\n    textAlign: \"center\",\n    textShadowColor: \"#000\",\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 1,\n      height: 5,\n    },\n  },\n});\n","import React, { useState } from \"react\";\n\nimport { ActivityIndicator, Colors } from \"react-native-paper\";\nimport { View, Text, StyleSheet } from \"react-native\";\n\nexport default function Loading() {\n  return (\n    <View style={styles.loading}>\n      <ActivityIndicator animating={true} color={\"#5555ff\"} size={40} />\n      <Text style={styles.loadingText}>Creating your form...</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  loading: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignSelf: \"auto\",\n    marginBottom: 40,\n    margin: 20,\n  },\n  loadingText: {\n    color: \"gray\",\n    margin: 20,\n  },\n});\n","import React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TouchableNativeFeedback,\n  Alert,\n  Lis,\n  ScrollView,\n  TouchableOpacity,\n  ToastAndroid,\n  Platform,\n} from \"react-native\";\nimport uuid from \"react-native-uuid\";\n\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport { TextInput } from \"react-native-paper\";\n\nimport Loading from \"./loading\";\n\nexport default function FormStater(props) {\n  const [formDetails, setFormDetails] = useState({\n    id: \"\",\n    title: \"\",\n    description: \"\",\n  });\n\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const titleHandle = (t) => {\n    setTitle(t);\n  };\n\n  const descHandle = (t) => {\n    setDescription(t);\n  };\n\n  const start = () => {\n    formDetails.id = uuid.v4();\n    formDetails.title = title;\n    formDetails.description = description;\n    setFormDetails({\n      id: formDetails.id,\n      title: formDetails.title,\n      description: formDetails.description,\n    });\n    console.log(formDetails);\n    var result;\n    if (formDetails.title !== \"\") {\n      result = true;\n    } else {\n      result = false;\n    }\n    console.log(result);\n    sendData(result);\n  };\n\n  // const [state, setState] = useState(\"\");\n\n  function sendData(result) {\n    console.log(\"props:  \", props);\n\n    if (result) {\n      props.func(formDetails);\n    } else {\n      alert(\"Please set a title for your new form!\");\n    }\n  }\n\n  return (\n    <ScrollView style={{ flex: 1 }}>\n      <View style={styles.area}>\n        <Text style={styles.heading}>New Form</Text>\n        <View style={styles.line} />\n\n        <View style={styles.subArea}>\n          <Text style={styles.text}>New Form Title</Text>\n          <TextInput\n            style={styles.input}\n            autoCapitalize=\"sentences\"\n            placeholder=\"Form Title...\"\n            value={title}\n            onChangeText={(t) => titleHandle(t)}\n          />\n\n          <Text style={styles.text}>New Form Description</Text>\n          <TextInput\n            style={styles.input}\n            autoCapitalize=\"sentences\"\n            placeholder=\"Form Description...(Optional)\"\n            value={description}\n            onChangeText={(t) => descHandle(t)}\n          />\n        </View>\n\n        <TouchableOpacity\n          style={styles.btn}\n          onPress={() => {\n            start();\n          }}\n        >\n          <View>\n            <Text style={styles.btnText}>\n              <Icon name=\"check\" size={40} color=\"#fff\" />\n            </Text>\n          </View>\n        </TouchableOpacity>\n      </View>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  area: {\n    backgroundColor: \"#fff\",\n    borderRadius: 10,\n    padding: 20,\n    margin: 10,\n    marginBottom: 20,\n\n    elevation: 10,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 2,\n      height: 3,\n    },\n\n    shadowOpacity: 0.7,\n    shadowRadius: 5.49,\n  },\n  heading: {\n    fontSize: 22,\n    color: \"#5555dd\",\n    fontWeight: \"bold\",\n    alignSelf: \"center\",\n    marginVertical: 5,\n  },\n  text: {\n    fontSize: 18,\n    color: \"#aaaaff\",\n    marginTop: 15,\n    marginHorizontal: 10,\n  },\n  input: {\n    margin: 5,\n  },\n  btn: {\n    backgroundColor: \"#5555dd\",\n    padding: 10,\n    margin: 10,\n    borderRadius: 40,\n    alignSelf: \"center\",\n    paddingHorizontal: 10,\n    top: 10,\n    marginVertical: 30,\n\n    elevation: 10,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 2,\n      height: 3,\n    },\n\n    shadowOpacity: 0.7,\n    shadowRadius: 5.49,\n  },\n  btnText: {\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    fontSize: 18,\n  },\n});\n","import React, { useState } from \"react\";\nimport { StyleSheet, Text, View, Platform } from \"react-native\";\n\nimport Header from \"./header\";\nimport FormStater from \"./formStater\";\nimport Loading from \"./loading\";\n\nexport default function Home() {\n  const formDetailsData = (data) => {\n    console.log(data);\n  };\n\n  return (\n    <View>\n      <Header />\n      <View style={styles.container}>\n        <FormStater func={formDetailsData.bind(this)} />\n        {/* <Loading /> */}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    // padding: 10,\n    // flex: 1,\n    height: \"100%\",\n\n    marginLeft: Platform.OS === \"web\" ? \"15%\" : 0,\n    marginRight: Platform.OS === \"web\" ? \"15%\" : 0,\n    justifyContent: \"center\",\n    // backgroundColor: \"green\",\n  },\n  main: {\n    // backgroundColor: \"#f00\",\n    // alignItems: \"center\",\n    // flexDirection: \"column\",\n    // justifyContent: \"center\",\n    // alignContent: \"space-between\",\n    // backgroundColor: \"#fff\",\n  },\n});\n","import React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  StatusBar,\n  Text,\n  View,\n  Button,\n  Platform,\n} from \"react-native\";\n\nimport Test from \"./screens/test/testing\";\n\nimport Home from \"./screens/main/home\";\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <Home />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    // flex: 1,\n    height: \"100%\",\n    backgroundColor: \"#cdcdfd\",\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0,\n  },\n});\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}